% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_CCA_AR.R
\name{ccaAR}
\alias{ccaAR}
\title{Robust Sparse CCA via alternating regressions}
\usage{
ccaAR(
  X,
  Y,
  lambdaAseq = seq(from = 1, to = 0, by = -0.01),
  lambdaBseq = seq(from = 1, to = 0, by = -0.01),
  rank,
  max.iter = 50,
  conv = 5 * 10^-2,
  ncores = 1,
  tol = 10^-8,
  mode = "fraction",
  alpha.sparselts = 0.75,
  lambda.start = 0.001,
  lambdaA.final = lambdaAseq,
  lambdaB.final = lambdaBseq,
  lambdamode.start = "fraction",
  lambdamode.final = "fraction"
)
}
\arguments{
\item{X}{An (nxp) data matrix.}

\item{Y}{An (nxq) data matrix}

\item{lambdaAseq}{grid of sparsity parameters for lambdaA}

\item{lambdaBseq}{grid of sparsity parameters for lambdaB}

\item{rank}{number of canonical vector pairs to extract}

\item{max.iter}{maximum number of iterations}

\item{conv}{tolerance value for convergence}

\item{ncores}{number of cores to use}

\item{tol}{tolerance parameter sparseLTS function}

\item{mode}{mode argument sparseLTS function, alternating regressions fit}

\item{alpha.sparselts}{alpha argument sparse LTS function}

\item{lambda.start}{sparsity parameter used in inital sparse LTS fit}

\item{lambdaA.final}{sparsity parameters for lambdaA used in final sparse LTS fit (to express canonical vectors in terms of original data sets)}

\item{lambdaB.final}{sparsity parameters for lambdaB used in final sparse LTS fit (to express canonical vectors in terms of original data sets)}

\item{lambdamode.start}{mode argument sparseLTS function, inital sparse LTS fit}

\item{lambdamode.final}{mode argument sparseLTS function, final sparse LTS fit}
}
\value{
ALPHA:            (pxr) estimated canonical vectors correpsonding to the first data set

BETA:             (qxr) estimated canonical vectors correpsonding to the second data set

cancors:          r estimated canonical correlations

U_ALL:            (nxr) estimated canonical variates corresponding to the first data set

V_ALL:            (nxr) estimated canonical variates corresponding to the second data set

lamdbaA:          value of the sparsity parameter lambdaA

lamdbaB:          value of the sparsity parameter lambdaB

it:               number of iterations
}
\description{
Function to perform Robust Sparse CCA  using alternating regressions from
paper by Wilms, I. and Croux, C. (2016), "Robust sparse canonical correlation analysis"
}
\details{
Implementation by Wilms, I.
}
\examples{
\dontrun{
set.seed(123)
library(mvtnorm) # only needed for simulated example
p <- 10
q <- 10
n <- 100

cov_xx <- matrix(0, ncol = p, nrow = p)
cov_yy <- matrix(0, ncol = q, nrow = q)
cov_xy <- matrix(0, nrow = p, ncol = q)

diag(cov_xx) <- 1
diag(cov_yy) <- 1
cov_xy <- matrix(0, nrow = p, ncol = q)
cov_xy[1, 1] <- 0.9
cov_xy[2, 2] <- 0.7

sigma <- rbind(
  cbind(cov_xx, cov_xy),
  cbind(Matrix::t(cov_xy), cov_yy)
)

data <- mvtnorm::rmvnorm(floor(n),
                         mean = rep(0, p + q),
                         sigma = sigma, checkSymmetry = F
)

x <-  as.matrix(data[, 1:p])
y <-  as.matrix(data[, (p + 1):(p + q)])
res <- ccaAR(x, y, rank = rank,
             lambdaAseq=seq(from=10^-2,to=10^-3,length=10),
             lambdaBseq=seq(from=10^-2,to=10^-3,length=10))
}

}
\references{
Wilms, I., & Croux, C. (2016). Robust sparse canonical correlation analysis. BMC systems biology, 10(1), 1-13.
}
